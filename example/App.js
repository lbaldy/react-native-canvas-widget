/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, { Component } from "react";
import {
  Platform,
  StyleSheet,
  Text,
  View,
  TouchableOpacity,
  Dimensions
} from "react-native";
import CBCanvasWidget from "react-native-canvas-widget";

export default class App extends Component<{}> {
  states = [
    '[{"name":"fillStyle","value":["#00FFbb"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#FF0000"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#00FF00"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#0000ff"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#00FFbb"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#FF0000"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#00FF00"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#0000ff"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#00FFbb"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#FF0000"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#00FF00"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#0000ff"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#00FFbb"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#FF0000"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#00FF00"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#0000ff"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#00FFbb"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#FF0000"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#00FF00"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]',
    '[{"name":"fillStyle","value":["#0000ff"]},{"name":"fillRect","value":[0, 0, 300, 150]},{"name":"clearRect","value":[20, 20, 100, 50]}]'
  ];

  constructor(props) {
    super(props);
    this.state = {
      activeIndex: 0,
      counter: 0
    };
    this.animate = this.animate.bind(this);
  }

  animate() {
    const time = new Date();
    const commands = [
      {
        name: "save",
        value: []
      },
      {
        name: "translate",
        value: [150, 150]
      },
      {
        name: "rotate",
        value: [
          ((2 * Math.PI) / 60) * time.getSeconds() +
            ((2 * Math.PI) / 60000) * time.getMilliseconds()
        ]
      },
      {
        name: "translate",
        value: [105, 0]
      },
      {
        name: "fillRect",
        value: [0, -12, 40, 24]
      },
      {
        name: "drawImage",
        value: [-12, -12]
      },
      {
        name: "restore",
        value: []
      }
    ];
    this._canvas.setNativeProps({
      commands: JSON.stringify(commands)
    });
    this.setState({
      counter: this.state.counter + 1
    });
  }

  componentDidMount() {
    setInterval(this.animate, 33);
  }

  render() {
    return (
      <View style={styles.container}>
        <TouchableOpacity
          onPress={() => {
            this.setState({ counter: this.state.counter + 1 });
          }}
        >
          <Text>sadsad {this.state.counter}</Text>
        </TouchableOpacity>
        <View style={{ width: 300, height: 300 }}>
          <CBCanvasWidget
            onChange={() => {
              this.setState({ counter: this.state.counter + 1 });
            }}
            style={{
              width: 300,
              height: 300
            }}
            ref={component => (this._canvas = component)}
          />
        </View>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#F5FCFF"
  },
  welcome: {
    fontSize: 20,
    textAlign: "center",
    margin: 10
  },
  instructions: {
    textAlign: "center",
    color: "#333333",
    marginBottom: 5
  }
});
